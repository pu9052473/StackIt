generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN
}

model User {
  id          String  @id @default(cuid())
  userName    String  @unique
  email       String  @unique
  profession  String?
  age         Int?
  about       String?
  socialLinks Json[] //title , link
  role        ROLE    @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  answer   Answer[]   @relation("answer_to_user")
  question Question[] @relation("question_to_user")
  comment  Comment[]  @relation("comment_to_user")
  notification Notification[] @relation("notification_to_user")
}

model Question {
  id          Int      @id @default(autoincrement())
  userId      String
  title       String
  description String
  tag         String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User     @relation("question_to_user", fields: [userId], references: [id])
  answer Answer[]
}

model Answer {
  id          Int    @id @default(autoincrement())
  userId      String
  questionId  Int
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User     @relation("answer_to_user", fields: [userId], references: [id])
  question Question @relation(fields: [questionId], references: [id])

  comment Comment[]
}

model Comment {
  id          Int    @id @default(autoincrement())
  userId      String
  answerId    Int
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation("comment_to_user", fields: [userId], references: [id])
  answer Answer @relation(fields: [answerId], references: [id])
}

model Notification {
  id          Int    @id @default(autoincrement())
  userId      String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation("notification_to_user", fields: [userId], references: [id])
}
