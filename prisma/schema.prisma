generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  userName     String         @unique
  email        String         @unique
  profession   String?
  age          Int?
  about        String?
  socialLinks  Json[]
  role         ROLE           @default(USER)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  answer       Answer[]       @relation("answer_to_user")
  comment      Comment[]      @relation("comment_to_user")
  notification Notification[] @relation("notification_to_user")
  question     Question[]     @relation("question_to_user")
}

model Question {
  id                                      Int            @id @default(autoincrement())
  userId                                  String
  title                                   String
  tag                                     String[]
  createdAt                               DateTime       @default(now())
  updatedAt                               DateTime       @updatedAt
  correctAnswerId                         Int?           @unique
  isAnswered                              Boolean        @default(false)
  description                             Json
  notification                            Notification[] @relation("NotificationToQuestion")
  answer_Question_correctAnswerIdToAnswer Answer?        @relation("Question_correctAnswerIdToAnswer", fields: [correctAnswerId], references: [id])
  user                                    User           @relation("question_to_user", fields: [userId], references: [id])
  answer_AnswerToQuestion                 Answer[]       @relation("AnswerToQuestion")
}

model Answer {
  id                                        Int        @id @default(autoincrement())
  userId                                    String
  questionId                                Int
  createdAt                                 DateTime   @default(now())
  updatedAt                                 DateTime   @updatedAt
  description                               Json
  upVote                                    Int        @default(0)
  downVote                                  Int        @default(0)
  user                                      User       @relation("answer_to_user", fields: [userId], references: [id])
  comment                                   Comment[]
  question_Question_correctAnswerIdToAnswer Question?  @relation("Question_correctAnswerIdToAnswer")
  question_AnswerToQuestion                 Question[] @relation("AnswerToQuestion")
}

model Comment {
  id          Int      @id @default(autoincrement())
  userId      String
  answerId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description Json
  answer      Answer   @relation(fields: [answerId], references: [id])
  user        User     @relation("comment_to_user", fields: [userId], references: [id])
}

model Notification {
  id          Int      @id @default(autoincrement())
  userId      String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  questionId  Int
  question    Question @relation("NotificationToQuestion", fields: [questionId], references: [id])
  user        User     @relation("notification_to_user", fields: [userId], references: [id])
}

enum ROLE {
  USER
  ADMIN
}
